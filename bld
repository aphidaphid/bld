#!/bin/bash

readonly COLOR_ERROR="\e[1;31m"
readonly COLOR_SUCCESS="\e[1;32m"
readonly COLOR_ALERT="\e[1;33m"
readonly COLOR_WORKING="\e[104m\e[97m"

readonly CMAKE_VERSION=3.5
readonly CMAKE_CXX_STANDARD=23

if [[ -f "./CMakeLists.txt" ]]; then
  PROJECT_NAME=$(grep -e project CMakeLists.txt | cut -d "(" -f2 | cut -d ")" -f1 | cut -d " " -f1)
else
  PROJECT_NAME=$(pwd | rev | cut -d / -f 1 | rev)
fi

error() {
  echo -e "${COLOR_ERROR}bld :: [error] $1\e[0m"
  exit
}

alert() {
  echo -e "${COLOR_ALERT}bld :: [alert] $1\e[0m"
}

print_status() {
  echo -e "${COLOR_WORKING}bld :: $1\e[0m"
}

print_options() {
  echo -e "bld :: specify one or more operations:
  -b: build
  -c: clean (deletes ./build)
  -r: run project binary\e[0m
  -t: copy default template
  -T: {ARG}: copy specified template
NOTE: templates are stored at ~/.local/share/bld/templates"
  exit
}

build() {
  if [ ! -d "./build" ]; then
    mkdir build
  fi

  pushd build
    if [ -f "./${PROJECT_NAME}" ]; then
      rm ./${PROJECT_NAME}
    fi
    cmake ..
    make
  popd
}

template() {
  DIR="~/.local/share/bld/templates/$1/"
  if [ -d ${DIR} ]; then
    error "template does not exist. the following templates are available:
    \e[1;34m$(cd ~/.local/share/bld/templates; ls -d -- */; cd $OLDPWD)"
    return
  fi
  for f in $(ls ~/.local/share/bld/templates/$1); do
    if [[ -f "./${f}" || -d "./${f}" ]]; then
      alert "${f} already exists"
    else
      print_status "copying $DIR$f..."
      cp -r ~/.local/share/bld/templates/default/$f .
      if [[ ${f} == "CMakeLists.txt" ]]; then # replace __PROJECT_NAME__ with folder name
        sed -i -e "s/__PROJECT_NAME__/${PROJECT_NAME}/g" ${f}
      fi
    fi
  done
  echo -e "${COLOR_SUCCESS}bld :: complete\e[0m"
}

# no argument supplied
if [[ $OPTIND == 1 ]]; then
  alert "invalid/absent operation"
  print_options
fi

while getopts ":bchrtT:" arg; do
  case ${arg} in
    b)
      if [[ ! -f "./CMakeLists.txt" ]]; then
        error "CMakeLists.txt file not found; use -t to insert a template from ~/.local/share/bld/templates"
      fi
      print_status "building..."
      build
      echo -e "${COLOR_SUCCESS}bld :: complete\e[0m"
      ;;
    c)
      if [ -d "./build" ]; then
        print_status "cleaning..."
        rm -rf ./build
      else
        alert "no cleaning required"
      fi
      echo -e "${COLOR_SUCCESS}bld :: complete\e[0m"
      ;;
    h)
      print_options
      ;;
    r)
      if [[ ! -f "./build/${PROJECT_NAME}" ]]; then
        error "project binary does not exist\e[0m"
      else
        print_status "running..."
        ./build/${PROJECT_NAME}
      fi
      echo -e "${COLOR_SUCCESS}bld :: complete\e[0m"
      ;;
    t)
      template "default"
      ;;
    T)
      template ${OPTARG}
      ;;
  esac
done

